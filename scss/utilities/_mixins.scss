// ==========================================================================
// Mixins
// ==========================================================================

// BEM selectors

@mixin e($element) {
  &__#{$element} {
    @content;
  }
}
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

// Media Queries

@mixin mq($break) {
  @if $break == "small" {
    @media (min-width: $brkpoint--sm) and (max-width: $brkpoint--md) {
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $brkpoint--md + 1) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $brkpoint--lg) {
      @content;
    }
  }
  @else {
    @error "No value could be retrieved for `#{$break}`. "
  }
};

// Flexbox Settings

@mixin f-columns {
  @for $i from 1 through $f-col-count {
    $context: f-context($f-col-width, $f-col-count ,$f-gutter-width) !global;
    $target: ($f-col-width * $i) + ($f-gutter-width * ($i - 1));
    &--#{$i} {
      width: percentage($target / $context);
    }
  }
};

// UI Colors

@each $theme, $color in $btn-colors {
  .btn--#{$theme} {
    background-color: $color;
  }
}

@each $theme, $color in $grid-colors {
  .grid__col--#{$theme}.theme__colors {
    background-color: $color;
  }
}


// Adjacent sibling margins

@mixin doubly($margin: 1em) {
  & + & {
   margin-left: $margin;
   @content;
  }
}
